name: "Python style issue change summary"
description: "Reports the number of issues added/resolved by pull requests"

inputs:
  targets:
    description: “targets to lint”
    required: true
  install_pylint:
    description: "whether pylint is already installed as part of other dependencies"
    required: false
    default: true

runs:
  using: "composite"
  steps:
    # python should already be installed
    # the PR should already be checked
    # normal dependencies should be installed
    # but install pylint if required (as of writing, composite actions don't support 'if')
    - name: Install pylint
      run: |
        [[ "${{ inputs.install_pylint }}" = true ]] && python -m pip install --upgrade pip && pip install pylint || true
      shell: bash
    # report the change in issues
    # get counts of issues
    - name: PR issues
      id: pr
      run: |
        COUNTS=$(python ${{ github.action_path }}/pylint_counts.py ${{ inputs.targets }})
        echo "::set-output name=counts::$COUNTS"
      shell: bash
    # checkout the default branch
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.repository.default_branch }}
    - name: default branch issues
      id: default
      run: |
        COUNTS=$(python ${{ github.action_path }}/pylint_counts.py ${{ inputs.targets }})
        echo "::set-output name=counts::$COUNTS"
      shell: bash
    # build the report
    - name: Build report
      id: report
      run: |
        echo '${{ steps.pr.outputs.counts }}' > now.json
        echo '${{ steps.default.outputs.counts }}' > then.json
        python ${{ github.action_path }}/build_report.py then.json now.json > report.md
        REPORT=$(cat report.md)
        echo report: $REPORT
        REPORT="${REPORT//$'\n'/'%0A'}"
        echo "::set-output name=comment::$REPORT"
      shell: bash
    # make the comment
    - name: Comment
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        message: |
          ${{ steps.report.outputs.comment }}

          using merge commit ${{ github.sha }} from pull request HEAD ${{ github.event.pull_request.head.sha }}
